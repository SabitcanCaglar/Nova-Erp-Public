#pragma checksum "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\Planlama\PlanlamaTaslakSiparisler.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f69c05f28d0ca8ee724d9b6e88efe6bf6c8b0557"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Planlama_PlanlamaTaslakSiparisler), @"mvc.1.0.view", @"/Views/Planlama/PlanlamaTaslakSiparisler.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using NovaErp.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using NovaErp.UI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using NovaErp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using NovaErp.Models.SiparisModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using FormHelper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\_ViewImports.cshtml"
using FluentValidation.AspNetCore;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f69c05f28d0ca8ee724d9b6e88efe6bf6c8b0557", @"/Views/Planlama/PlanlamaTaslakSiparisler.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e376f31cfd09b79d8d551f69fe4712ff35193dd", @"/Views/_ViewImports.cshtml")]
    public class Views_Planlama_PlanlamaTaslakSiparisler : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\Planlama\PlanlamaTaslakSiparisler.cshtml"
   int? kullanıcıId = Context.Session.GetInt32("Id");

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\Planlama\PlanlamaTaslakSiparisler.cshtml"
   string kullanıcıadsoyad = Context.Session.GetString("AdSoyad");

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 6 "C:\Users\CAN FAMİLY\Documents\GitHub\Nova\NovaErp\NovaErp.UI\Views\Planlama\PlanlamaTaslakSiparisler.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f69c05f28d0ca8ee724d9b6e88efe6bf6c8b05575168", async() => {
                WriteLiteral("\r\n    <title>TASLAK SİPARİŞLER</title>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f69c05f28d0ca8ee724d9b6e88efe6bf6c8b05576178", async() => {
                WriteLiteral(@"
    <button class=""btn btn-danger"" id=""SiparisTaslakHubBtn"" style=""visibility: hidden""></button>

    <div class=""row heading-bg"" style=""background-color: #2c466b; text-align: center"">
        <div class=""col-lg-5 col-md-4 col-sm-4 col-xs-12"">
            <h2 class=""txt-light""> <i class=""fa fa-tasks""></i>&nbspTaslak Siparişler</h2>
        </div>
        <!-- Breadcrumb -->
        <div class=""col-lg-9 col-sm-8 col-md-8 col-xs-12"">

        </div>
        <!-- /Breadcrumb -->
    </div>

    <div class=""row"">
        <div class=""col-sm-12"">
            <div class=""panel panel-default card-view"">
                <div class=""panel-heading"">
                    <div class=""pull-center"">

                    </div>
                    <div class=""clearfix""></div>
                </div>
                <div class=""panel-wrapper collapse in"">
                    <div class=""panel-body"">
                        <div class=""row"">
                            <div class=""col-md-4"">


     ");
                WriteLiteral(@"                       </div>
                            <div class=""col-md-2"">
                                <button id=""taslaksiparis"" style="" font-size: 20px "" class=""btn btn-warning btn-anim""><i class=""fa fa-check-square fa-3x""></i><span class=""btn-text"">Taslak Sipariş&nbsp&nbsp</span><span id=""taslaksiparisbadge"" style=""color: #c9222a;font-size:15px"" class=""badge badge-light"">4</span></button>

                            </div>
                            
                            <div class=""col-ms-1"">


                            </div>
                            <div class=""col-md-3"">

                                <button id=""revizetalep"" style="" font-size: 20px "" class=""btn btn-primary btn-anim""><i class=""fa fa-ban fa-3x""></i><span class=""btn-text"">Revize Talep&nbsp&nbsp</span><span id=""revizetalepbadge"" style=""color: #c9222a;font-size:15px"" class=""badge badge-light"">2</span></button>
                            </div>

                        </div><br /><br /><br /><br />");
                WriteLiteral(@"
                         <div id=""listeload"">
                            <h1 id=""yazı"" style=""color: #2c466b; text-align: center"">Taslak Sipariş Listesi</h1>
                            <table id=""taslaksiparisler"" class=""table table-border-style wrap"">


                                <thead class=""wrap"">
                                    <tr>
                                        <th>Id</th>
                                        <th>GüncelleyenpersonelId</th>
                                        <th>EklenmeTarihi</th>
                                        <th>Aciklama</th>
                                        <th style=""text-align:center"">PO NUMBER</th>
                                        <th style=""text-align:center"">Sipariş Kodu</th>
                                        <th style=""text-align:center"">Miktar</th>
                                        <th style=""text-align:center"">Standart <br />Maliyet</th>
                                        <th style=""text-ali");
                WriteLiteral(@"gn:center"">Müşteri <br /> Adı-Soyadı</th>
                                        <th style=""text-align:center"">Oluşturma<br />Tarihi</th>
                                        <th style=""text-align:center"">Planlama Onay</th>
                                        <th style=""text-align:center"">MusteriId</th>
                                        <th style=""text-align:center"">Ayrıntı</th>


                                    </tr>
                                </thead>
                            </table>

                          </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
    <!-- jQuery -->
    <!--<script src=""~/ERPWEB/vendors/bower_components/jquery/dist/jquery.min.js""></script>-->



    <script>
        var siparistaslak;
        var taslaksiparisler;
        $(document).ready(function () {

            taslaksiparisler = $('#taslaksiparisler').DataTable({

                /*""dom"": 'Blfrtip',*/

   ");
                WriteLiteral(@"             ""responsive"": true, ""lengthChange"": false,
                ""autoWidth"": false, ""processing"": true,
                ""serverSide"": false, ""select"": false,
                ""destroy"": true,
                ""lengthMenu"": [[5, 10, 30, -1], [5, 10, 30, ""All""]],
                ""fixedHeader"": true,
                ""scrollX"": true,
                ""scrollY"": true,
                ""order"": [[2, ""desc""]],

                ""ajax"": {
                    ""url"": ""/Planlama/TaslakSiparisListesi"",
                    ""type"": ""GET""
                },
                ""columnDefs"":
                    [
                        {
                            ""targets"": [0, 1, 2, 3, 10,11],
                            ""visible"": false,
                            ""searchable"": false,
                        },
                        {
                            ""targets"": [2, 3, 4, 5, 6, 7, 8, 9,12],
                            ""className"": 'dt-body-center'

                        },



");
                WriteLiteral(@"                    ],







                ""columns"": [




                    { ""data"": ""id"" },
                    { ""data"": ""guncelleyenPersonelId"" },
                    { ""data"": ""eklenmeTarihi"" },
                    { ""data"": ""aciklama"" },
                    { ""data"": ""poNumber"" },
                    { ""data"": ""siparisKodu"" },
                    { ""data"": ""miktar"" },
                    {
                        ""data"": ""standartMaliyet"",
                        ""render"": function (standartMaliyet) {
                            return '$' + standartMaliyet;

                        }

                    },
                    { ""data"": ""musteriAdiSoyadi"" },
                    { ""data"": ""olusturmaTarihi"" },
                    { ""data"": ""planlamaOnay"" },
                    { ""data"": ""musteriId"" },





                    {
                        ""data"": null,
                        ""className"": ""ayrinti"",
                        ""render"": function (da");
                WriteLiteral(@"ta, type, row) {

                            return '  <button id=""' + data.siparisKodu + '"" class=""btn btn-primary btn-icon-anim btn-circle""><i class=""fa fa-info-circle ""></i></button>  ';
                        },
                        ""targets"": -1
                    }


                ],
                ""rowCallback"": function (row, data, index) {
                    var today = new Date();
                    var todayparse = today.toISOString();
                    var taslakolusturmatarihi = new Date(data[""eklenmeTarihi""]);
                    var fark = (today - taslakolusturmatarihi) / 60000;




                    if (fark < 60 && data[""planlamaOnay""] == false) {
                        var interval = 0;

                        setInterval(function () {
                            interval++;
                            if (interval % 2 == 1) {
                                $('td', row).css('background-color', '#c9222a');


                            }
        ");
                WriteLiteral(@"                    if (interval == 2) {

                                $('td', row).css('background-color', 'white');

                                interval = 0;
                            }


                        }, 2000);


                    }
                }

            });
            $('#taslaksiparisler tbody').on('click', '.ayrinti', function () {
                siparistaslak = taslaksiparisler.row(this).data();
                taslaksiparisgetir.ayrintimodal(siparistaslak);




            });



        });



        var taslaksiparisgetir = {

            ayrintimodal: function (siparistaslak) {
                $.ajax({
                    type: ""POST"",
                    url: ""/TaslakSiparis/SiparisUrunListe"",
                    data: siparistaslak,
                    dataType: 'json',
                    success: function (data) {


                        siparisayrinti.planlamaonaysızmodal(siparistaslak);
                        tasla");
                WriteLiteral(@"ksiparisgetir.urunliste(data);

                    }


                });
            },


            PlanlamaRevizeTalep: function (siparistaslak) {
                $.ajax({
                    type: ""POST"",
                    url: ""/TaslakSiparis/SiparisUrunListe"",
                    data: siparistaslak,
                    dataType: 'json',
                    success: function (data) {


                        PlanlamaRevizeTalep(siparistaslak);
                        taslaksiparisgetir.urunliste(data);

                    }


                });
            },
            urunliste: function (data) {
                siparisayrinti.eklenenurunlerigetir(data);
            }

        };





        var siparisayrinti = {

            eklenenurunlerigetir: function (data) {

                var siparisürüntablo = $('#siparisuruntablo').DataTable({

                    /*""dom"": 'Blfrtip',*/

                    ""responsive"": true, ""lengthChange"": false,
  ");
                WriteLiteral(@"                  ""autoWidth"": false, ""processing"": true,
                    ""serverSide"": false, ""select"": false,
                    ""destroy"": true,
                    ""lengthMenu"": [[5, 10, 30, -1], [5, 10, 30, ""All""]],
                    ""fixedHeader"": true,
                    ""scrollX"": true,
                    ""scrollY"": true,

                    ""data"": data,
                    ""columnDefs"":
                        [
                            {
                                ""targets"": [0, 1, 2, 5, 6, 13, 14],
                                ""visible"": false,
                                ""searchable"": false,
                            },
                            {
                                ""targets"": [3, 4, 7, 8, 9, 10, 11,],
                                ""className"": 'dt-center'

                            },





                        ],







                    ""columns"": [




                        { ""data"": ""id"" },
          ");
                WriteLiteral(@"              { ""data"": ""guncelleyenPersonelId"" },

                        { ""data"": ""urunId"" },
                        { ""data"": ""kodu"" },
                        { ""data"": ""adi"" },
                        {
                            ""data"": ""satisFiyat"",
                            ""render"": function (satisFiyat) {
                                return '$' + satisFiyat;

                            }

                        },
                        { ""data"": ""stokAdet"" },
                        { ""data"": ""renkKod"" },
                        { ""data"": ""kategori"" },
                        { ""data"": ""altKategori"" },
                        { ""data"": ""stokAdet"" },
                        { ""data"": ""miktar"" },
                        { ""data"": ""birim"" },
                        { ""data"": ""siparisKodu"" },
                        { ""data"": ""standartMaliyet"" },



                        //{
                        //    ""data"": null,
                        //    ""className"": """);
                WriteLiteral(@"düzenle"",
                        //    ""render"": function (data, type, row) {

                        //        return '<button class=""btn btn-primary btn-icon-anim btn-circle""><i class=""fa fa-edit ""></i></button> ';
                        //    },
                        //    ""targets"": -1
                        //},
                        //{
                        //    ""data"": null,
                        //    ""className"": ""sil"",
                        //    ""render"": function (data, type, row) {

                        //        return ' <button class=""btn btn-danger btn-icon-anim btn-circle""><i class=""fa fa-trash ""></i></button> ';
                        //    },
                        //    ""targets"": -1
                        //}


                    ]


                });
                
            },
            planlamaonaysızmodal: function (siparistaslak) {

                var poNumber;
                var aciklama;
                if (siparistaslak.");
                WriteLiteral(@"poNumber == undefined || siparistaslak.poNumber == null) {
                    poNumber = """";
                }
                else {
                    poNumber = siparistaslak.poNumber;
                };
                if (siparistaslak.aciklama == undefined || siparistaslak.aciklama == null) {
                    aciklama = """";

                }
                else {
                    aciklama = siparistaslak.aciklama;
                };





                Swal.fire({
                    title: '<i  class=""fa fa-check-square fa-3x"" style=""color:#3cb878"">' +
                        '<h2 style=""color:#2c466b"">TASLAK SİPARİŞ</h2>',
                    allowOutsideClick: false,
                    html: true,
                    denyButtonColor: '#2c466b',
                    showDenyButton: true,
                    cancelButtonColor: '#c9222a',
                    denyButtonText: 'Revize',
                    cancelButtonText: 'İptal',
                    showCancelButto");
                WriteLiteral(@"n: true,
                    confirmButtonText: 'Onayla',
                    confirmButtonColor: '#3cb878',





                    width: '1450px',
                    html:

                        '<div  class=""col-sm-12"">' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Taslak Sipariş Kodu :&nbsp&nbsp</label>' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#c9222a"">' + siparistaslak.siparisKodu + '</label><br /><br />' +
                        '<label class=""col-form-label"" style=""font-size:20px;color:#2c466b"">PO NUMBER &nbsp&nbsp</label>' +

                        '<input id=""ponumber"" value=""' + poNumber + '"" class=""col-form-control"" style=""font-size:20px;color:#c9222a"" readonly ></input>' +

                        '</div>' +



                        '<div  class=""col-sm-12"">' +


                        '<table id=""siparisuruntablo"" class=""table table-border-style wrap"">' +
             ");
                WriteLiteral(@"           ' <thead class=""wrap"">' +
                        '<tr>' +
                        '<th>Id</th>' +
                        '<th>GüncelleyenpersonelId</th>' +
                        '<th>ÜrünId</th>' +
                        '<th style=""text-align:center"">Ürün Kodu</th>' +
                        '<th style=""text-align:center"">Ürün Adı</th>' +
                        '<th style=""text-align:center"">Satış Fiyat</th>' +
                        '<th style=""text-align:center"">Stok Adet</th>' +
                        '<th style=""text-align:center"">Renk Kodu</th>' +
                        '<th style=""text-align:center"">Kategori</th>' +
                        '<th style=""text-align:center"">Alt <br /> Kategori</th>' +
                        '<th style=""align-items:center"">Stok<br /> Adet</th>' +
                        '<th style=""align-items:center"">Miktar</th>' +
                        '<th style=""align-items:center"">Birim</th>' +
                        '<th style=""align-items:center");
                WriteLiteral(@""">SiparisKodu</th>' +
                        '<th style=""align-items:center"">StandartMaliyet</th>' +


                        '</tr>' +
                        '</thead>' +
                        '</table>' +
                        '</div><br /><br />' +
                        '<div  class=""input-group row g-3 align-items-center col-sm-12"">' +
                        '<div  class=""col-sm-6"">' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Açıklama</label><br />' +
                        '<textarea id=""aciklama"" style=""height:150px;width:605px"" rows=""8"" cols=""55"" class=""col-sm-12 form-control"" readonly >' + aciklama + '</textarea>' +

                        '</div>' +
                        '<div  class=""col-sm-6"">' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Toplam Adet :</label>' +
                        '<label class=""col-form-label"" style=""font-size:45px;color:#c9222a"">' + ' ' + '' + si");
                WriteLiteral(@"paristaslak.miktar + ' </label><br />' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Standart Maliyet :</label>' +
                        '<label class=""col-form-label"" style=""font-size:45px;color:#c9222a"">' + ' ' + '$' + siparistaslak.standartMaliyet + ' </label>' +


                        '</div>' +
                        '</div><br />',



                }).then((result) => {
                    if (result.isConfirmed) {


                        PlanlamaOnay(siparistaslak);
                    } else if (result.isDenied) {
                        taslaksiparisgetir.PlanlamaRevizeTalep(siparistaslak);

                    }
                })

            }
        };



        function PlanlamaOnay(siparistaslak) {

            $.ajax({
                type: ""POST"",
                url: ""/Planlama/PlanlamaOnay"",
                data: siparistaslak,
                dataType: 'json',
                success: function (dur");
                WriteLiteral(@"um) {

                    if (durum == ""basarili"") {




                        Swal.mixin({
                            toast: true,
                            position: 'top',
                            iconColor: 'white',
                            customClass: {
                                popup: 'colored-toast'
                            },
                            showConfirmButton: false,
                            timer: 2500,
                            timerProgressBar: true,

                        }).fire({
                            icon: 'success',
                            title: 'Planlama Onayı Başarılı Bir Şekilde Verildi',
                            width: '500px'

                        })
                        var message = ""Siparis Taslak Onaylandı."";
                        $(""#SiparisTaslakHubBtn"").trigger('siparistaslakeklesilgüncelle', [message]);


                    }



                    else {

                        Swal");
                WriteLiteral(@".mixin({
                            toast: true,
                            position: 'top',
                            iconColor: 'white',
                            customClass: {
                                popup: 'colored-toast'
                            },
                            showConfirmButton: false,
                            timer: 2500,
                            timerProgressBar: true,

                        }).fire({
                            icon: 'error',
                            title: data,
                            width: '500px'

                        })
                    }

                }


            })

        };
        function PlanlamaRevizeTalep(siparistaslak) {
            var poNumber;
            var aciklama;
            if (siparistaslak.poNumber == undefined || siparistaslak.poNumber == null) {
                poNumber = """";
            }
            else {
                poNumber = siparistaslak.poNumber;
  ");
                WriteLiteral(@"          };
            if (siparistaslak.aciklama == undefined || siparistaslak.aciklama == null) {
                aciklama = """";

            }
            else {
                aciklama = siparistaslak.aciklama;
            };
            Swal.fire({
                title: '<i  class=""fa fa-ban fa-3x"" style=""color:#c9222a"">' +
                    '<h2 style=""color:#2c466b"">TASLAK SİPARİŞ REVİZE TALEBİ</h2>',
                allowOutsideClick: false,
                html: true,


                cancelButtonColor: '#c9222a',

                cancelButtonText: 'İptal',
                showCancelButton: true,
                confirmButtonText: 'Onayla',
                confirmButtonColor: '#3cb878',
                showLoaderOnConfirm: true,




                width: '1450px',
                html:

                    '<div  class=""col-sm-12"">' +
                    '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Taslak Sipariş Kodu :&nbsp&nbsp</label>' +");
                WriteLiteral(@"
                    '<label class=""col-form-label"" style=""font-size:25px;color:#c9222a"">' + siparistaslak.siparisKodu + '</label><br /><br />' +
                    '<label class=""col-form-label"" style=""font-size:20px;color:#2c466b"">PO NUMBER &nbsp&nbsp</label>' +

                    '<input id=""ponumber"" value=""' + poNumber + '"" class=""col-form-control"" style=""font-size:20px;color:#c9222a"" readonly ></input>' +

                    '</div>' +



                    '<div  class=""col-sm-12"">' +


                    '<table id=""siparisuruntablo"" class=""table table-border-style wrap"">' +
                    ' <thead class=""wrap"">' +
                    '<tr>' +
                    '<th>Id</th>' +
                    '<th>GüncelleyenpersonelId</th>' +
                    '<th>ÜrünId</th>' +
                    '<th style=""text-align:center"">Ürün Kodu</th>' +
                    '<th style=""text-align:center"">Ürün Adı</th>' +
                    '<th style=""text-align:center"">Satış Fiyat</");
                WriteLiteral(@"th>' +
                    '<th style=""text-align:center"">Stok Adet</th>' +
                    '<th style=""text-align:center"">Renk Kodu</th>' +
                    '<th style=""text-align:center"">Kategori</th>' +
                    '<th style=""text-align:center"">Alt <br /> Kategori</th>' +
                    '<th style=""align-items:center"">Stok<br /> Adet</th>' +
                    '<th style=""align-items:center"">Miktar</th>' +
                    '<th style=""align-items:center"">Birim</th>' +
                    '<th style=""align-items:center"">SiparisKodu</th>' +
                    '<th style=""align-items:center"">StandartMaliyet</th>' +


                    '</tr>' +
                    '</thead>' +
                    '</table>' +
                    '</div><br /><br />' +
                    '<div  class=""input-group row g-3 align-items-center col-sm-12"">' +
                    '<div  class=""col-sm-6"">' +
                    '<label class=""col-form-label"" style=""font-size:25px;color:#");
                WriteLiteral(@"2c466b"">Açıklama</label><br />' +
                    '<textarea id=""aciklama"" style=""height:150px;width:605px"" rows=""8"" cols=""55"" class=""col-sm-12 form-control"" readonly>' + aciklama + '</textarea>' +

                    '</div>' +
                    '<div  class=""col-sm-6"">' +
                    '<label class=""col-form-label"" style=""font-size:25px;color:#c9222a"">Revize Talep Sebebi</label>' +
                    '<select id=""revizetalepsebebi"" class=""form-control"">' +
                    '    <option>Hammadde Yetersizliği</option>' +
                    '    <option>Kritik Stok Seviyesi</option>' +
                    '    <option>İş Gücü Eksikliği</option>' +
                    '    <option>Makine veya Teçhizat Eksikliği</option>' +
                    '    <option>Diğer Nedenler..</option>' +
                    '</select><br />' +
                    '<label class=""col-form-label"" style=""font-size:25px;color:#c9222a"">Revize Talep Açıklama</label><br />' +
                    '<textarea ");
                WriteLiteral(@"id=""revizeaciklama"" style=""height:80px"" rows=""8"" cols=""55"" class=""col-sm-12 form-control"" ></textarea>' +


                    '</div>' +
                    '</div><br />',



            }).then((result) => {
                siparistaslak.planlamaRevizeTalepSebebi = $(""#revizetalepsebebi"").val();
                siparistaslak.planlamaRevizeAciklama = $(""#revizeaciklama"").val();
                if (result.isConfirmed) {

                    $.ajax({
                        type: ""POST"",
                        url: ""/Planlama/PlanlamaRevize"",
                        data: siparistaslak,
                        dataType: 'json',
                        success: function (data) {

                            if (data == ""basarili"") {


                                Swal.mixin({
                                    toast: true,
                                    position: 'top',
                                    iconColor: 'white',
                                    customClass:");
                WriteLiteral(@" {
                                        popup: 'colored-toast'
                                    },
                                    showConfirmButton: false,
                                    timer: 2500,
                                    timerProgressBar: true,

                                }).fire({
                                    icon: 'success',
                                    title: 'Revize Talebi Başarılı',
                                    width: '500px'

                                })
                                var message = ""Siparis Taslak Onaylandı."";
                                $(""#SiparisTaslakHubBtn"").trigger('siparistaslakeklesilgüncelle', [message]);


                            }



                            else {

                                Swal.mixin({
                                    toast: true,
                                    position: 'top',
                                    iconColor: 'white',
          ");
                WriteLiteral(@"                          customClass: {
                                        popup: 'colored-toast'
                                    },
                                    showConfirmButton: false,
                                    timer: 4500,
                                    timerProgressBar: true,

                                }).fire({
                                    icon: 'error',
                                    title: data,
                                    width: '500px'

                                })
                            }

                        }


                    })









                }
            })
        };
        $(document).ready(function () {

            $(""#revizetalep"").click(function () {

                revizetalepliste.load();


            });
            $(""#taslaksiparis"").click(function () {

                taslaksiparisliste.load();


            });

        });
        var revizeta");
                WriteLiteral(@"blo;
        var revizetalepliste = {
            load: function () {

                revizetalepliste.tablehtml();
                revizetalepliste.tableload();
            },
            tablehtml: function () {

                var tablehtml = ' <div id=""listeload"">';
                tablehtml += '<h1 id=""yazı"" style=""color: #2c466b; text-align: center"">Revize Talep Edilen  <br />Sipariş Listesi</h1>';
                tablehtml += '<table id=""revizetablo"" class=""table table-border-style wrap"">';
                tablehtml += '<thead class=""wrap"">';
                tablehtml += ' <tr>';
                tablehtml += '<th>Id</th>';
                tablehtml += '<th>GüncelleyenpersonelId</th>';
                tablehtml += '<th>EklenmeTarihi</th>';
                tablehtml += '<th>Aciklama</th>';
                tablehtml += '<th style=""text-align:center"">PO NUMBER</th>';
                tablehtml += '<th style=""text-align:center"">Sipariş Kodu</th>';
                tablehtml += '<th style");
                WriteLiteral(@"=""text-align:center"">Miktar</th>';
                tablehtml += '<th style=""text-align:center"">Fiyat</th>';
                tablehtml += '<th style=""text-align:center"">Müşteri <br /> Adı-Soyadı</th>';
                tablehtml += '<th style=""text-align:center"">Oluşturma<br />Tarihi</th>';
                tablehtml += '<th style=""text-align:center"">Ayrıntı</th>';
                tablehtml += '</tr>';
                tablehtml += '</thead>';
                tablehtml += '</table>';
                tablehtml += '</div>';

                $(""#listeload"").replaceWith(tablehtml);

            },

            tableload: function () {
                revizetablo;
                $(document).ready(function () {

                    revizetablo = $('#revizetablo').DataTable({

                        /*""dom"": 'Blfrtip',*/

                        ""responsive"": true, ""lengthChange"": false,
                        ""autoWidth"": false, ""processing"": true,
                        ""serverSide"": false,");
                WriteLiteral(@" ""select"": false,
                        ""destroy"": true,
                        ""lengthMenu"": [[5, 10, 30, -1], [5, 10, 30, ""All""]],
                        ""fixedHeader"": true,
                        ""scrollX"": true,
                        ""scrollY"": true,
                        ""order"": [[2, ""desc""]],

                        ""ajax"": {
                            ""url"": ""/TaslakSiparis/RevizeTalepListe"",
                            ""type"": ""POST""
                        },
                        ""columnDefs"":
                            [
                                {
                                    ""targets"": [0, 1, 2, 3],
                                    ""visible"": false,
                                    ""searchable"": false,
                                },
                                {
                                    ""targets"": [2, 3, 4, 5, 6, 7, 8, 9],
                                    ""className"": 'dt-body-center'

                                ");
                WriteLiteral(@"},



                            ],







                        ""columns"": [




                            { ""data"": ""id"" },
                            { ""data"": ""guncelleyenPersonelId"" },
                            { ""data"": ""eklenmeTarihi"" },
                            { ""data"": ""aciklama"" },
                            { ""data"": ""poNumber"" },
                            { ""data"": ""siparisKodu"" },
                            { ""data"": ""miktar"" },
                            {
                                ""data"": ""fiyat"",
                                ""render"": function (fiyat) {
                                    return '$' + fiyat;

                                }

                            },
                            { ""data"": ""musteriAdiSoyadi"" },
                            { ""data"": ""olusturmaTarihi"" },






                            {
                                ""data"": null,
                                ""className"": ""revizeayri");
                WriteLiteral(@"nti"",
                                ""render"": function (data, type, row) {

                                    return '  <button  class=""btn btn-primary btn-icon-anim btn-circle""><i class=""fa fa-info-circle ""></i></button>  ';
                                },
                                ""targets"": -1
                            }



                        ],


                    });
                    $('#revizetablo tbody').on('click', '.revizeayrinti', function () {
                        siparistaslak = revizetablo.row(this).data();
                        RevizeAyrinti(siparistaslak);




                    });




                });






            },





        };
        var taslaksiparisliste = {
            load: function () {
                taslaksiparisliste.tablehtml();
                taslaksiparisliste.tableload();
            },
            tablehtml: function () {
                /* $('#listeload').remove();*/
                v");
                WriteLiteral(@"ar tablehtml = ' <div id=""listeload"">';
                tablehtml += '<h1 id=""yazı"" style=""color: #2c466b; text-align: center"">Taslak  <br />Sipariş Listesi</h1>';
                tablehtml += '<table id=""taslaksiparistablosu"" class=""table table-border-style wrap"">';
                tablehtml += '<thead class=""wrap"">';
                tablehtml += ' <tr>';
                tablehtml += '<th>Id</th>';
                tablehtml += '<th>GüncelleyenpersonelId</th>';
                tablehtml += '<th>EklenmeTarihi</th>';
                tablehtml += '<th>Aciklama</th>';
                tablehtml += '<th style=""text-align:center"">PO NUMBER</th>';
                tablehtml += '<th style=""text-align:center"">Sipariş Kodu</th>';
                tablehtml += '<th style=""text-align:center"">Miktar</th>';
                tablehtml += '<th style=""text-align:center"">Fiyat</th>';
                tablehtml += '<th style=""text-align:center"">Müşteri <br /> Adı-Soyadı</th>';
                tablehtml += '<th style=""t");
                WriteLiteral(@"ext-align:center"">Oluşturma<br />Tarihi</th>';
                tablehtml += '<th style=""text-align:center"">Ayrıntı</th>';
                tablehtml += '<th style=""text-align:center"">Onay</th>';
                tablehtml += '</tr>';
                tablehtml += '</thead>';
                tablehtml += '</table>';
                tablehtml += '</div>';

                $(""#listeload"").replaceWith(tablehtml);

            },

            tableload: function () {
                var taslaksiparistablosu;
                $(document).ready(function () {

                    taslaksiparistablosu = $('#taslaksiparistablosu').DataTable({

                        /*""dom"": 'Blfrtip',*/

                        ""responsive"": true, ""lengthChange"": false,
                        ""autoWidth"": false, ""processing"": true,
                        ""serverSide"": false, ""select"": false,
                        ""destroy"": true,
                        ""lengthMenu"": [[5, 10, 30, -1], [5, 10, 30, ""All""]],
   ");
                WriteLiteral(@"                     ""fixedHeader"": true,
                        ""scrollX"": true,
                        ""scrollY"": true,
                        ""order"": [[2, ""desc""]],

                        ""ajax"": {
                            ""url"": ""/TaslakSiparis/TaslakSiparisListe"",
                            ""type"": ""GET""
                        },
                        ""columnDefs"":
                            [
                                {
                                    ""targets"": [0, 1, 2, 3],
                                    ""visible"": false,
                                    ""searchable"": false,
                                },
                                {
                                    ""targets"": [2, 3, 4, 5, 6, 7, 8, 9],
                                    ""className"": 'dt-body-center'

                                },



                            ],







                        ""columns"": [




                            { ""data"": """);
                WriteLiteral(@"id"" },
                            { ""data"": ""guncelleyenPersonelId"" },
                            { ""data"": ""eklenmeTarihi"" },
                            { ""data"": ""aciklama"" },
                            { ""data"": ""poNumber"" },
                            { ""data"": ""siparisKodu"" },
                            { ""data"": ""miktar"" },
                            {
                                ""data"": ""fiyat"",
                                ""render"": function (fiyat) {
                                    return '$' + fiyat;

                                }

                            },
                            { ""data"": ""musteriAdiSoyadi"" },
                            { ""data"": ""olusturmaTarihi"" },






                            {
                                ""data"": null,
                                ""className"": ""ayrinti"",
                                ""render"": function (data, type, row) {

                                    return '  <button  class=""btn ");
                WriteLiteral(@"btn-primary btn-icon-anim btn-circle""><i class=""fa fa-info-circle ""></i></button>  ';
                                },
                                ""targets"": -1
                            },
                            {
                                ""data"": null,
                                ""className"": ""sil"",
                                ""render"": function (data, type, row) {

                                    return ' <button class=""btn btn-danger btn-icon-anim btn-circle""><i class=""fa fa-trash ""></i></button> ';
                                },
                                ""targets"": -1
                            }


                        ],


                    });
                    $('#taslaksiparistablosu tbody').on('click', '.ayrinti', function () {
                        siparistaslak = taslaksiparistablosu.row(this).data();
                        SiparisAyrinti(siparistaslak);




                    });
                    $('#taslaksiparisl");
                WriteLiteral(@"er tbody').on('click', '.sil', function () {
                        var data = taslaksiparistablosu.row(this).data();


                        TaslakSiparisSil(data);

                    });



                });






            },


        };
        function SiparisAyrinti(siparistaslak) {
            $.ajax({
                type: ""POST"",
                url: ""/TaslakSiparis/SiparisUrunListe"",
                data: siparistaslak,
                dataType: 'json',
                success: function (data) {


                    siparisayrinti.planlamaonaysızmodal(siparistaslak);
                    siparisayrinti.eklenenürünlerigetir(data);


                }


            });
        }
        function RevizeAyrinti(siparistaslak) {
            $.ajax({
                type: ""POST"",
                url: ""/TaslakSiparis/SiparisUrunListe"",
                data: siparistaslak,
                dataType: 'json',
                success: function (data) {

");
                WriteLiteral(@"
                    revizeayrinti.revizemodal(siparistaslak);
                    revizeayrinti.revizmodaluruntablo(data);


                }


            });
        }
        var revizeayrinti = {

            revizmodaluruntablo: function (data) {

                var revizeuruntablo = $('#revizeuruntablo').DataTable({

                    /*""dom"": 'Blfrtip',*/

                    ""responsive"": true, ""lengthChange"": false,
                    ""autoWidth"": false, ""processing"": true,
                    ""serverSide"": false, ""select"": false,
                    ""destroy"": true,
                    ""lengthMenu"": [[5, 10, 30, -1], [5, 10, 30, ""All""]],
                    ""fixedHeader"": true,
                    ""scrollX"": true,
                    ""scrollY"": true,

                    ""data"": data,
                    ""columnDefs"":
                        [
                            {
                                ""targets"": [0, 1, 2, 5, 6, 12, 13],
                       ");
                WriteLiteral(@"         ""visible"": false,
                                ""searchable"": false,
                            },
                            {
                                ""targets"": [3, 4, 7, 8, 9, 10, 11, 14],
                                ""className"": 'dt-center'

                            },





                        ],







                    ""columns"": [




                        { ""data"": ""id"" },
                        { ""data"": ""guncelleyenPersonelId"" },

                        { ""data"": ""urunId"" },
                        { ""data"": ""kodu"" },
                        { ""data"": ""adi"" },
                        {
                            ""data"": ""satisFiyat"",
                            ""render"": function (satisFiyat) {
                                return '$' + satisFiyat;

                            }

                        },
                        { ""data"": ""stokAdet"" },
                        { ""data"": ""renkKod"" },
                  ");
                WriteLiteral(@"      { ""data"": ""kategori"" },
                        { ""data"": ""altKategori"" },
                        { ""data"": ""miktar"" },
                        { ""data"": ""birim"" },
                        { ""data"": ""siparisKodu"" },
                        { ""data"": ""siparisTaslakId"" },


                        {
                            ""data"": null,
                            ""className"": ""düzenle"",
                            ""render"": function (data, type, row) {

                                return '<button class=""btn btn-primary btn-icon-anim btn-circle""><i class=""fa fa-edit ""></i></button> ';
                            },
                            ""targets"": -1
                        },
                        {
                            ""data"": null,
                            ""className"": ""sil"",
                            ""render"": function (data, type, row) {

                                return ' <button class=""btn btn-danger btn-icon-anim btn-circle""><i class=""fa fa-");
                WriteLiteral(@"trash ""></i></button> ';
                            },
                            ""targets"": -1
                        }


                    ]


                });
                $('#revizeuruntablo tbody').on('click', '.düzenle', function () {
                    var data = revizeuruntablo.row(this).data();


                    SiparisOnayUrunGunncelle(data);

                });
                $('#revizeuruntablo tbody').on('click', '.sil', function () {
                    var data = revizeuruntablo.row(this).data();


                    SiparisOnayUrunSil(data);

                });
            },
            revizemodal: function (siparistaslak) {

                var poNumber;
                var aciklama;
                if (siparistaslak.poNumber == undefined || siparistaslak.poNumber == null) {
                    poNumber = """";
                }
                else {
                    poNumber = siparistaslak.poNumber;
                };
              ");
                WriteLiteral(@"  if (siparistaslak.aciklama == undefined || siparistaslak.aciklama == null) {
                    aciklama = """";

                }
                else {
                    aciklama = siparistaslak.aciklama;
                };





                Swal.fire({
                    title: '<i  class=""fa fa-info fa-3x"" style=""color:#3cb878"">' +
                        '<h2 style=""color:#2c466b"">SİPARİŞ AYRINTI</h2>',
                    allowOutsideClick: false,
                    html: true,


                    cancelButtonColor: '#c9222a',
                    cancelButtonText: 'Vazgeç',
                    showCancelButton: true,
                    confirmButtonText: 'Onayla',
                    confirmButtonColor: '#2c466b',
                    showLoaderOnConfirm: true,




                    width: '1550px',
                    html:

                        '<div  class=""col-sm-12"">' +
                        '<label class=""col-form-label"" style=""font-size:25px;colo");
                WriteLiteral(@"r:#2c466b"">Taslak Sipariş Kodu :&nbsp&nbsp</label>' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#c9222a"">' + siparistaslak.siparisKodu + '</label><br /><br />' +
                        '<label class=""col-form-label"" style=""font-size:20px;color:#2c466b"">PO NUMBER &nbsp&nbsp</label>' +

                        '<input id=""ponumber"" value=""' + poNumber + '"" class=""col-form-control"" style=""font-size:20px;color:#c9222a""></input>' +

                        '</div>' +



                        '<div  class=""col-sm-12"">' +


                        '<table id=""revizeuruntablo"" class=""table table-border-style wrap"">' +
                        ' <thead class=""wrap"">' +
                        '<tr>' +
                        '<th>Id</th>' +
                        '<th>GüncelleyenpersonelId</th>' +
                        '<th>ÜrünId</th>' +
                        '<th style=""text-align:center"">Ürün Kodu</th>' +
                        '<th style=""text-al");
                WriteLiteral(@"ign:center"">Ürün Adı</th>' +
                        '<th style=""text-align:center"">Satış Fiyat</th>' +
                        '<th style=""text-align:center"">Stok Adet</th>' +
                        '<th style=""text-align:center"">Renk Kodu</th>' +
                        '<th style=""text-align:center"">Kategori</th>' +
                        '<th style=""text-align:center"">Alt <br /> Kategori</th>' +
                        '<th style=""align-items:center"">Miktar</th>' +
                        '<th style=""align-items:center"">Birim</th>' +
                        '<th style=""align-items:center"">SiparisKodu</th>' +
                        '<th style=""align-items:center"">SiparisTaslakId</th>' +
                        '<th style=""align-items:center"">Düzenle</th>' +
                        '<th style=""align-items:center"">Sil</th>' +

                        '</tr>' +
                        '</thead>' +
                        '</table>' +
                        '</div><br /><br />' +
         ");
                WriteLiteral(@"               '<div  class=""input-group row g-3 align-items-center col-sm-12"">' +
                        '<div  class=""col-sm-6"">' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Açıklama</label><br />' +
                        '<textarea id=""aciklama"" style=""height:80px"" rows=""8"" cols=""55"" class=""col-sm-12 form-control"">' + aciklama + '</textarea><br /><br /><br /><br /><br />' +
                        '<label class=""col-form-label"" style=""font-size:30px;color:#c9222a"">' + siparistaslak.planlamaRevizeTalepSebebi + '</label><br />' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Revize Talep Açıklama</label><br />' +
                        '<textarea style=""height:80px"" rows=""8"" cols=""55"" class=""col-sm-12 form-control"" readonly>' + siparistaslak.planlamaRevizeAciklama + '</textarea>' +

                        '</div><br /><br />' +
                        '<div  class=""col-sm-6"">' +
                    ");
                WriteLiteral(@"    '<button  onclick=""SiparisOnayUrunEkle(siparistaslak)"" class=""btn btn-success btn-anim""><i class=""icon-rocket""></i><span class=""btn-text"">Ürün Ekle</span></button><br /><br />' +

                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Toplam Adet :</label>' +
                        '<label class=""col-form-label"" style=""font-size:45px;color:#c9222a"">' + ' ' + '' + siparistaslak.miktar + ' </label><br />' +
                        '<label class=""col-form-label"" style=""font-size:25px;color:#2c466b"">Toplam Fiyat :</label>' +
                        '<label class=""col-form-label"" style=""font-size:45px;color:#c9222a"">' + ' ' + '$' + siparistaslak.fiyat + ' </label>' +


                        '</div>' +
                        '</div><br />',








                    preConfirm: () => {
                        $.ajax({
                            type: ""POST"",
                            url: ""/TaslakSiparis/RevizeResponse"",
                       ");
                WriteLiteral(@"     data: siparistaslak,
                            dataType: 'json',
                            success: function (data) {

                                if (data == ""basarili"") {
                                    Swal.mixin({
                                        toast: true,
                                        position: 'top',
                                        iconColor: 'white',
                                        customClass: {
                                            popup: 'colored-toast'
                                        },
                                        showConfirmButton: false,
                                        timer: 3500,
                                        timerProgressBar: true,

                                    }).fire({
                                        icon: 'success',
                                        title: 'Yaptığınız tüm revizeler başarılı bir şekilde Üretim Planlama birimine İletildi.',
                 ");
                WriteLiteral(@"                       width: '500px'

                                    })
                                    var message = ""Revize Talebi Cevaplandı."";
                                    $(""#SiparisTaslakHubBtn"").trigger('siparistaslakeklesilgüncelle', [message]);
                                    BadgesGuncelle();
                                } else {
                                    Swal.mixin({
                                        toast: true,
                                        position: 'top',
                                        iconColor: 'white',
                                        customClass: {
                                            popup: 'colored-toast'
                                        },
                                        showConfirmButton: false,
                                        timer: 4000,
                                        timerProgressBar: true,

                                    }).fire({
                         ");
                WriteLiteral(@"               icon: 'error',
                                        title: data,
                                        width: '500px'

                                    })
                                }


                            }


                        })

                    },
                    allowOutsideClick: () => !Swal.isLoading()
                })

            }
        };
        $(document).ready(function () {
            BadgesGuncelle();

        });
        function BadgesGuncelle() {
            $.ajax({
                type: ""POST"",
                url: ""/Planlama/BadgesGuncelle"",
                dataType: 'json',
                success: function (data) {

                    document.getElementById('planlamaonaybadge').innerHTML = data.planlamabadge;
                    document.getElementById('taslaksiparisbadge').innerHTML = data.taslakbadge;
                    document.getElementById('revizetalepbadge').innerHTML = data.revizebagde;

");
                WriteLiteral(@"                }


            })
        }

    </script>
    <script>

        $(document).ready(function () {

            const conn = new signalR.HubConnectionBuilder().withUrl(""/SiparisTaslakHub"").build();
            conn.start();

            $(""#SiparisTaslakHubBtn"").on('siparistaslakeklesilgüncelle', function (event, message) {



                conn.invoke(""SiparisTaslakTabloReload"", message);



            });
            conn.on(""siparistaslakeklesilgüncelle"", message => {
                taslaksiparisler.ajax.reload();


            })







        });







    </script>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
